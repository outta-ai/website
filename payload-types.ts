/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
	collections: {
		members: Member;
		admins: Admin;
		media: Media;
		"payload-preferences": PayloadPreference;
		"payload-migrations": PayloadMigration;
	};
	globals: {
		"website-main": WebsiteMain;
		"website-lab": WebsiteLab;
		"website-playground": WebsitePlayground;
		info: Info;
	};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "members".
 */
export interface Member {
	id: string;
	name: string;
	works?:
		| {
				description?: string | null;
				id?: string | null;
		  }[]
		| null;
	profile?: string | Media | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
	id: string;
	alt?: string | null;
	object?: string | null;
	updatedAt: string;
	createdAt: string;
	url?: string | null;
	filename?: string | null;
	mimeType?: string | null;
	filesize?: number | null;
	width?: number | null;
	height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins".
 */
export interface Admin {
	id: string;
	name: string;
	updatedAt: string;
	createdAt: string;
	email: string;
	resetPasswordToken?: string | null;
	resetPasswordExpiration?: string | null;
	salt?: string | null;
	hash?: string | null;
	loginAttempts?: number | null;
	lockUntil?: string | null;
	password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
	id: string;
	user: {
		relationTo: "admins";
		value: string | Admin;
	};
	key?: string | null;
	value?:
		| {
				[k: string]: unknown;
		  }
		| unknown[]
		| string
		| number
		| boolean
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
	id: string;
	name?: string | null;
	batch?: number | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "website-main".
 */
export interface WebsiteMain {
	id: string;
	about: {
		summary: {
			[k: string]: unknown;
		}[];
		description: {
			[k: string]: unknown;
		}[];
	};
	values?:
		| {
				keyword?: string | null;
				description?: string | null;
				id?: string | null;
		  }[]
		| null;
	methods: {
		summary: string;
		description: {
			[k: string]: unknown;
		}[];
	};
	sumamry: {
		contents: {
			[k: string]: unknown;
		}[];
	};
	history?:
		| {
				year: string;
				title: string;
				description?: string | null;
				id?: string | null;
		  }[]
		| null;
	board_members?:
		| {
				member: string | Member;
				position: string;
				description?:
					| {
							description?: string | null;
							id?: string | null;
					  }[]
					| null;
				id?: string | null;
		  }[]
		| null;
	executive_members?:
		| {
				member: string | Member;
				position: string;
				description?:
					| {
							description?: string | null;
							id?: string | null;
					  }[]
					| null;
				id?: string | null;
		  }[]
		| null;
	updatedAt?: string | null;
	createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "website-lab".
 */
export interface WebsiteLab {
	id: string;
	index: {
		characteristics?:
			| {
					title: string;
					description: {
						[k: string]: unknown;
					}[];
					id?: string | null;
			  }[]
			| null;
		curriculums?:
			| {
					icon: string | Media;
					name: string;
					description: string;
					courses?:
						| {
								name: string;
								description: string;
								id?: string | null;
						  }[]
						| null;
					id?: string | null;
			  }[]
			| null;
		reviews?:
			| {
					name: string;
					description: {
						[k: string]: unknown;
					}[];
					id?: string | null;
			  }[]
			| null;
		recommend?:
			| {
					image?: string | Media | null;
					description: {
						[k: string]: unknown;
					}[];
					id?: string | null;
			  }[]
			| null;
		registration: {
			due_date: string;
			link: string;
		};
	};
	updatedAt?: string | null;
	createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "website-playground".
 */
export interface WebsitePlayground {
	id: string;
	index?: {};
	updatedAt?: string | null;
	createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "info".
 */
export interface Info {
	id: string;
	name: string;
	address: string;
	registrationNumber?: string | null;
	email: string;
	manager: string | Member;
	terms?: string | null;
	privacy?: string | null;
	bottom?:
		| {
				name: string;
				url: string;
				id?: string | null;
		  }[]
		| null;
	social?:
		| {
				name: string;
				url: string;
				id?: string | null;
		  }[]
		| null;
	external?:
		| {
				name: string;
				url: string;
				id?: string | null;
		  }[]
		| null;
	updatedAt?: string | null;
	createdAt?: string | null;
}
