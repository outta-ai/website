name: Deploy Website (dev)

on:
  push:
    branches:
      - develop
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  docker-build:
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_NAME }}
          aws-region: us-east-1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Deploy to AWS
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_DEFAULT_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_DEFAULT_ACCOUNT_ID }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_IMAGE_CLOUDFRONT_URL: ${{ vars.NEXT_PUBLIC_IMAGE_CLOUDFRONT_URL }}
          NEXT_PUBLIC_IMAGE_S3_URL: ${{ vars.NEXT_PUBLIC_IMAGE_S3_URL }}
          NEXT_PUBLIC_CHANNEL_KEY: ${{ vars.NEXT_PUBLIC_CHANNEL_KEY }}
          NEXT_PUBLIC_GOOGLE_OAUTH_CLIENT_ID: ${{ vars.NEXT_PUBLIC_GOOGLE_OAUTH_CLIENT_ID }}
        run: |
          corepack enable
          curl -fsSL https://ion.sst.dev/install | bash
          pnpm install
          /home/runner/.sst/bin/sst deploy --stage develop
